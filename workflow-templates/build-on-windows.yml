# This workflow builds artifact name, builds and tests the application, analyzes it with Sonar and pushes to the Octopus Deploy
# To configure this workflow:
#
# 1. Create build_properties.json. Instractions: https://github.com/NationalResearchCorporation/nrchealth-custom-actions
# 2. Add your build instractions in the 'build step'
# 3. Optionally review and change triggers and steps

name: General Windows build

on:
  push:
    branches: [ $default-branch ]
  pull_request:
    branches: [ $default-branch  ]

# This job generates name of the artifact based on the properties in build_properties.json files. See details and options in nrchealth-custom-actions repo.
jobs:
  build_artifact_name:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      # checkout the private repo containing the action to run
      - name: Checkout GitHub Action Repo
        uses: actions/checkout@v2
        with:
          repository: NationalResearchCorporation/nrchealth-custom-actions
          token: ${{ secrets.CUSTOM_ACTIONS_GIT_HUB_TOKEN }} # stored in GitHub secrets
          path: ./.github/actions
          ref: 'build-artifact-name-v.1.1-latest'
      - name: build_artifact_name
        id:   build_artifact_name
        uses: ./.github/actions/build_artifact_name
      - name: Upload artifact name
        uses: actions/upload-artifact@v2
        with:
          name: artifact_name
          path: ${{steps.build_artifact_name.outputs.file_path}}

  # This job builds, tests and analyzes application with sonar
  build:
    needs: build_artifact_name
    runs-on: windows-latest
    steps:

      # Getting artifact name from the previous job
      - name: checkout
        uses: actions/checkout@v1
      - name: Download Artifact Name
        uses: actions/download-artifact@v2
        with:
          name: artifact_name
      - name: Get artifact name
        id: get_artifact
        run: |
          echo "name=$(cat package_name.txt)" >> $env:GITHUB_OUTPUT

      # YOUR BUILD INSTRACTIONS
      - name: build
        run: |
          # Put your build instractions here. Make sure you used "${{steps.get_artifact.outputs.name}}.zip" as package name
          

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: published_webapp
          path: ./${{steps.get_artifact.outputs.name}}.zip


  # This job uploads artifact to the Octopus Deploy
  upload:
    needs: build
    runs-on: ubuntu-latest
    steps:

      # Getting artifact from the previous job
      - name: Get the version
        id: get_tag
        run: |
          echo "VERSION=$(echo ${{GITHUB.REF}} | cut -d'-' -f 2)" >> $GITHUB_OUTPUT
      - name: Download Artifact Name
        uses: actions/download-artifact@v2
        with:
          name: artifact_name
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: published_webapp

      # Installing Octopus CLI    
      - name: install Octopus Deploy CLI
        uses: OctopusDeploy/install-octocli@v1
        with:
          version: 7.4.2

      # Connecting to the company VPN
      - name: Checkout GitHub Action Repo
        uses: actions/checkout@v2
        with:
          repository: NationalResearchCorporation/nrchealth-custom-actions
          token: ${{ secrets.CUSTOM_ACTIONS_GIT_HUB_TOKEN }} # stored in GitHub secrets
          path: ./.github/actions
          ref: 'connect-to-vpn-v.1-latest'
          
      - name: Start Open VPN 3
        continue-on-error: false
        env:
          USER_CERT: ${{ secrets.USER_CRT }}
          USER_SECRET: ${{ secrets.USER_KEY }}
          CA_CERT: ${{ secrets.CA_CRT }}
        run: |
          chmod +x .github/actions/connect_to_vpn/scripts/action.sh
          .github/actions/connect_to_vpn/scripts/action.sh  
          
      # Pushing the artifact to OD
      - name: Push to Octopus
        run: |
          package_name=`cat package_name.txt`
          echo $package_name
          octo push --package="$package_name.zip" --server="${{ secrets.OCTOPUS_SERVER }}" --apiKey="${{ secrets.OCTOPUS_APIKEY }}"



